name: Coverage Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  coverage:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'yarn'
    
    - name: Install dependencies
      run: yarn install --frozen-lockfile
    
    - name: Run tests with coverage
      run: yarn test:coverage
      env:
        CI: true
        COVERAGE: true
    
    - name: Check coverage thresholds
      run: node scripts/coverage-check.js
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
    
    - name: Archive coverage reports
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: |
          coverage/lcov-report/
          coverage/coverage-summary.json
          coverage/coverage-history.json
    
    - name: Comment PR with coverage
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const fs = require('fs');
          const coverageSummary = JSON.parse(fs.readFileSync('coverage/coverage-summary.json', 'utf8'));
          const total = coverageSummary.total;
          
          const comment = `## Coverage Report
          
          | Metric | Coverage | Threshold |
          |--------|----------|-----------|
          | Statements | ${total.statements.pct.toFixed(2)}% | 90% |
          | Branches | ${total.branches.pct.toFixed(2)}% | 90% |
          | Functions | ${total.functions.pct.toFixed(2)}% | 90% |
          | Lines | ${total.lines.pct.toFixed(2)}% | 90% |
          
          [View detailed coverage report](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}})`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });