name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test-library:
    name: Test Library
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup
        uses: ./.github/actions/setup
        
      - name: Run TypeScript check
        run: yarn typecheck
        
      - name: Run linting
        run: yarn lint
        
      - name: Run library tests
        run: yarn test:coverage:check
        env:
          CI: true
          
      - name: Upload coverage reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: coverage-report
          path: |
            coverage/
            coverage-check/
          
      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results
          path: |
            junit.xml
            test-results/

  test-example:
    name: Test Example App
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup
        uses: ./.github/actions/setup
          
      - name: Build library
        run: yarn build
        
      - name: Run example app tests
        run: cd example && yarn test:coverage
        env:
          CI: true
          
      - name: Upload example test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: example-test-results
          path: |
            example/coverage/
            example/junit.xml

  build-library:
    name: Build and Validate Library
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup
        uses: ./.github/actions/setup
        
      - name: Build library
        run: yarn build:prod
        
      - name: Validate build output
        run: yarn validate:build
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-output
          path: lib/
          
  test-ios:
    name: iOS Platform Tests
    uses: ./.github/workflows/test-ios.yml
    
  test-android:
    name: Android Platform Tests  
    uses: ./.github/workflows/test-android.yml

  check-all:
    name: All Checks Pass
    runs-on: ubuntu-latest
    needs: [test-library, test-example, build-library, test-ios, test-android]
    if: always()
    
    steps:
      - name: Check job results
        run: |
          if [[ "${{ needs.test-library.result }}" != "success" || 
                "${{ needs.test-example.result }}" != "success" || 
                "${{ needs.build-library.result }}" != "success" || 
                "${{ needs.test-ios.result }}" != "success" || 
                "${{ needs.test-android.result }}" != "success" ]]; then
            echo "One or more jobs failed"
            exit 1
          fi
          echo "All checks passed!"
