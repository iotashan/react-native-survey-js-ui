name: Cross-Platform Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test-ios:
    name: Test iOS
    runs-on: macos-latest
    timeout-minutes: 30
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup
        uses: ./.github/actions/setup
        
      - name: Build library
        run: yarn build
        
      - name: Setup iOS environment
        run: |
          brew install watchman
          sudo xcode-select -s /Applications/Xcode.app
          
      - name: Cache CocoaPods
        uses: actions/cache@v4
        with:
          path: example/ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
            
      - name: Install CocoaPods
        working-directory: example/ios
        run: pod install
        
      - name: Run iOS tests
        working-directory: example
        run: |
          # Run unit tests
          yarn test:ios
          
      - name: Build iOS app
        working-directory: example
        run: |
          npx react-native run-ios --simulator="iPhone 14" --no-packager
        env:
          RCT_NO_LAUNCH_PACKAGER: 1
          
      - name: Upload iOS test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ios-test-results
          path: |
            example/test-results/ios/
            example/coverage/ios/

  test-android:
    name: Test Android
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup
        uses: ./.github/actions/setup
        
      - name: Build library
        run: yarn build
        
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            example/android/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        
      - name: Run Android tests
        working-directory: example
        run: |
          # Run unit tests
          yarn test:android
          
      - name: Build Android app
        working-directory: example/android
        run: ./gradlew assembleDebug
        
      - name: Upload Android test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: android-test-results
          path: |
            example/test-results/android/
            example/coverage/android/
            example/android/app/build/outputs/

  platform-matrix-test:
    name: Platform Matrix Tests
    strategy:
      matrix:
        include:
          - os: macos-latest
            platform: ios
            device: "iPhone 14"
          - os: ubuntu-latest
            platform: android
            api-level: 33
    runs-on: ${{ matrix.os }}
    timeout-minutes: 40
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup
        uses: ./.github/actions/setup
        
      - name: Build library
        run: yarn build
        
      - name: Run platform-specific tests
        working-directory: example
        run: |
          yarn test --testMatch="**/__tests__/**/*.${PLATFORM}.test.{ts,tsx}"
        env:
          PLATFORM: ${{ matrix.platform }}
          CI: true
          
      - name: Upload platform test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{ matrix.platform }}-matrix-test-results
          path: |
            example/test-results/${{ matrix.platform }}/
            example/coverage/${{ matrix.platform }}/

  cross-platform-validation:
    name: Cross-Platform Validation
    runs-on: ubuntu-latest
    needs: [test-ios, test-android, platform-matrix-test]
    if: always()
    
    steps:
      - name: Check platform test results
        run: |
          if [[ "${{ needs.test-ios.result }}" != "success" || 
                "${{ needs.test-android.result }}" != "success" || 
                "${{ needs.platform-matrix-test.result }}" != "success" ]]; then
            echo "Cross-platform tests failed"
            exit 1
          fi
          echo "All platform tests passed!"
          
      - name: Download test artifacts
        uses: actions/download-artifact@v3
        with:
          path: test-results/
          
      - name: Generate cross-platform report
        run: |
          echo "# Cross-Platform Test Report" > cross-platform-report.md
          echo "iOS Tests: ${{ needs.test-ios.result }}" >> cross-platform-report.md
          echo "Android Tests: ${{ needs.test-android.result }}" >> cross-platform-report.md
          echo "Matrix Tests: ${{ needs.platform-matrix-test.result }}" >> cross-platform-report.md
          
      - name: Upload cross-platform report
        uses: actions/upload-artifact@v3
        with:
          name: cross-platform-report
          path: cross-platform-report.md